<?xml version="1.0"?>

<project name="Ingenio" basedir="." default="deployWar">

	<property name="project" value="Ingenio" />
	<property name="ox3" value="true" />
	<property name="openxava.base.dir" value=".."/> <!-- Change if you want OpenXava and Addons in another folder -->
	<property file="../openxava.properties"/>
	
    <!-- 2019-10-10 Agregado por carper -->
	<property name="webinf.dir" value="web/WEB-INF" />
    <!-- <property name="local.dir"  value="/home/carper/local" /> -->
    <property name="local.dir"  value="/Users/carper/local" />
	
	<!-- <property name="sql.jar"    value="../OpenXava/lib/hsqldb.jar" /> -->
	<!-- <property name="sql.driver" value="org.hsqldb.jdbcDriver"/> -->
	<!-- <property name="sql.url"  	 value="jdbc:hsqldb:hsql://localhost:1666"/> -->
	<!-- <property name="sql.user" 	 value="sa"/> -->
	<!-- <property name="sql.pass" 	 value=""/>  -->

    <property name="sql.jar"    value="web/WEB-INF/lib/postgresql-42.2.5.jar" />
	<property name="sql.driver" value="org.postgresql.Driver"/>
	<property name="sql.url" 	value="jdbc:postgresql://localhost:5432/ingenio"/>
	<property name="sql.user" 	value="postgres"/>
	<property name="sql.pass" 	value=""/> 

    <!-- 
	Compile all .java and .groovy 
	Not needed to call it if you work inside Eclipse
	-->
	<target name="compile"> 
		<ant antfile="${openxava.base.dir}/OpenXava/build.xml" target="compile"/>
	</target>	    	
	
	<!-- 
	Build and deploy the application in war format. 
	It deploys it on the Tomcat included in OpenXava distribution, 
	to deploy to other location modify the tomcat.dir property of workspace/openxava.properties.
	-->	
	<target name="deployWar">
		<!-- In a directory -->
		<ant antfile="${openxava.base.dir}/OpenXava/build.xml" target="deploy"/>
		<!-- In a file (it does not work well on windows + tomcat)
		<ant antfile="${openxava.base.dir}/OpenXava/build.xml" target="deployWar"/>
		-->
	</target>
	
	<!-- 
	Build the application in war format.
	Leaves the war in the workspace.dist/YourApplication.dist folder.
	 -->	
	<target name="createWar">
		<ant antfile="${openxava.base.dir}/OpenXava/build.xml" target="createWar"/>
	</target>				

	
	<!--
	Build the application in portlets format 
	-->		
	<target name="generatePortlets"> 
		<ant antfile="${openxava.base.dir}/OpenXava/build.xml" target="generatePortlets"/>
	</target>
	
	<!--
	Update this project with the latest OpenXava version present in the workspace.
	It must be called just after update the OpenXava version.
	-->
	<target name="updateOX">
		<ant antfile="${openxava.base.dir}/OpenXava/build.xml" target="updateOX"/>
	</target>
	
	<!--
	Connects to your database and updates your schema in order to match to your current application.
	Remember to give value to schema.path with the path of the JDBC driver jar for your database.
	-->
	<target name="updateSchema">
		<ant antfile="${openxava.base.dir}/OpenXava/build.xml" target="updateSchemaJPA">			
			<property name="persistence.unit" value="junit"/>
            <property name="schema.path" value="${sql.jar}"/>
		</ant>
	</target>	
	
	<!-- 2019-10-08 Agregado por carper -->

	<property name="class.dir"     value="${webinf.dir}/classes" />
	<property name="represult.dir" value="tests" />

	<path id="master-classpath" description="Master CLASSPATH for this script">
        <fileset dir="${webinf.dir}/lib">
			<include name="*.jar" />
		</fileset>
        <fileset dir="${openxava.base.dir}/OpenXava/lib">
			<include name="*.jar" />
		</fileset>
		<pathelement location="${class.dir}/" />
	</path>

    
	<target name="sql-query">
		<sql classpath="${sql.jar}"
			driver="${sql.driver}" 
			url="${sql.url}" 
			userid="${sql.user}" password="${sql.pass}" 
			print="yes"
            src="etc/sql/query.sql">
		</sql>
    </target>
        
	<target name="sql-update">
		<sql classpath="${sql.jar}"
			driver="${sql.driver}" 
			url="${sql.url}" 
			userid="${sql.user}" password="${sql.pass}" 
			print="yes"
            src="etc/sql/update.sql">
		</sql>
    </target>

	<target name="sql-alter">
		<sql classpath="${sql.jar}"
			driver="${sql.driver}" 
			url="${sql.url}" 
			userid="${sql.user}" password="${sql.pass}" 
			print="yes"
            src="etc/sql/alter.sql">
		</sql>
    </target>

	<target name="sql-insert">
		<sql classpath="${sql.jar}"
			driver="${sql.driver}" 
			url="${sql.url}" 
			userid="${sql.user}" password="${sql.pass}" 
			print="yes"
            src="etc/sql/insert.sql">
		</sql>
    </target>

    <target name="test" depends="compile">
        <echo>${nombre_clase}</echo>
		
		<mkdir dir="${represult.dir}"/>

		<junit printsummary="on" showoutput="no" filtertrace="off">
			<classpath refid="master-classpath" />
			<batchtest fork="yes" todir="${represult.dir}">
				<!-- <formatter type="plain" /> -->
				<formatter type="xml" />
				<fileset dir="${class.dir}">
                    
                    <include name="**/${nombre_clase}.class" />

                    <!-- Prueba Integral -->
                    <!-- <include name="**/SuiteTest.class" /> -->
                    
                    <!-- Pruebas independientes -->
                    <!-- <include name="**/AreaTest.class" /> -->

					<!-- <include name="**/TurbiedadDetalle1Test.class" /> -->
					<!-- <include name="**/JugoDetalleTest.class" /> -->
					<!-- <include name="**/CanaDetalle2Test.class" /> -->
					<!-- <include name="**/TrashCanaDetalle2Test.class" /> -->
					<!-- <include name="**/UnidadTest.class" /> -->
					<!-- <include name="**/JugoTest.class" /> -->
					<!-- <include name="**/ParoTest.class" /> -->
					<!-- <include name="**/BrixDensidadWpTest.class" /> -->
					<!-- <include name="**/BrixDensidadTitSusTest.class" /> -->
                    <!-- <include name="**/QueryTest.class" /> -->

                    <!--
					<include name="**/CodeTest.class" />
					<exclude name="**/HibernateTest.class" />
					<exclude name="**/SpringTest.class" />
					<exclude name="**/AllTests.class" />
					-->
				</fileset>
			</batchtest>
		</junit>
	</target>

    <target name="deleteClasses">
        <delete dir="${class.dir}/ec"/>
        <delete dir="temp"/>
	</target>

    <target name="deleteDatabaseFolder">
        <delete dir="data"/>
	</target>
    
    <property name="backup.dir" value="${local.dir}/respaldo/codigo" />
	<tstamp>
		<format property="fecha" pattern="yyyy.MM.dd-HH.mm.ss" locale="es,EC"/>
	</tstamp>
	<property name="zip.file" value="${backup.dir}/${ant.project.name}-${fecha}-src.zip" />
    <target name="zip">
		<zip destfile="${zip.file}">
            <fileset dir="." excludes="i18n/portlets, data/, temp/, tests/, xava/dtds/, web/"/>
		</zip>
	</target>
    
    <target name="copyReports">
        <copy todir="${class.dir}">
            <fileset dir="reports" includes="*.jrxml, *.jasper, logo.jpg" />
        </copy>	
    </target>
    
    <target name="ingenioBeans">
        <jar destfile="etc/jar/ingenio-beans.jar"
            basedir="${class.dir}"
            excludes="**/Test.class"
            />
    </target>

	<!-- MENU INTERACTIVO PARA EJECUTAR TAREAS -->
	
    <property name="antform.home" value="etc/jar/antform.jar" />
	<taskdef name="antform" classname="com.sardak.antform.AntForm" classpath="${antform.home}"/>
	<taskdef name="antmenu" classname="com.sardak.antform.AntMenu" classpath="${antform.home}"/>
	
    <!-- <property name="antform.home" value="${local.dir}/javaDev/antform-bin-2.0" /> -->
	<!-- <taskdef name="antform" classname="com.sardak.antform.AntForm"  -->
	<!-- 	classpath="${antform.home}/lib/antform.jar"/> -->
	<!-- <taskdef name="antmenu" classname="com.sardak.antform.AntMenu"  -->
	<!-- 	classpath="${antform.home}/lib/antform.jar"/> -->

	<target name="menu">
		<antmenu image="reports/logo.jpg" title="Tareas" loop="true" >
			<button label="copyReports" target="copyReports"/>
			<button label="sql-query"   target="sql-query"/>
			<button label="zip"         target="zip"/>
			<button label="Exit"        loopexit="true"/>
        </antmenu>

		<!--
		<antmenu title="carper's menu of ant tasks" loop="true" height="50">
			<AntMenuItem name="delete-App"    target="delete-App"/>
			<AntMenuItem name="delete-Db"     target="delete-Db"/>
			<AntMenuItem name="compile"       target="compile"/>
			<AntMenuItem name="updateSchema"  target="updateSchema"/>
			<AntMenuItem name="updateClass"   target="updateClass"/>
			<AntMenuItem name="deployWar"     target="deployWar"/>
			<AntMenuItem name="sql-import-h2" target="sql-import-h2"/>
			<AntMenuItem name="sql-query"     target="sql-query"/>
			<AntMenuItem name="test"          target="test"/>
			<AntMenuItem name="Exit"          loopexit="true"/>
        </antmenu>
		-->
	</target>

</project>
